openapi: '3.1.0'
servers: [] 
jsonSchemaDialect: 'https://json-schema.org/draft/2019-09/schema'
info:
  title: OpenProductionDataIO
  description: "OpenProductionDataIO is a REST-based API enabling permissioned access to\
    \ versioned metadata in a heterogeneous media supply chain.\
    \ \n\n\nThe purpose of OPDIO is to define an open industry standard for interacting \
    \ with media metadata.\
    \ \n\nOpenProductionDataIO seeks to ensure metadata consistency and to provide a\
    \ standard method for integrating software throughout the pre-production and production\
    \ process, by offering a unified API for accessing metadata across all\
    \ of these applications.\
    \n\nBelow is the draft specification for the OpenProductionDataIO API."
  version: 0.1.0
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
- name: Asset Management
  description: CRUDL operations for Assets, as defined by the OMC schema.
- name: Participant Management
  description: CRUDL operations for Participants, as defined by the OMC schema.
- name: Character Management
  description: CRUDL operations for Characters, as defined by the OMC schema.
- name: CreativeWork Management
  description: CRUDL operations for CreativeWorks, as defined by the OMC schema.

paths:
  /asset/create:
    post:
      summary: Create new Assets in OPDIO and receive an OMC identifier.
      security: 
        - bearerToken: []
        - openId:
            - write
        - oauth2User:
            - write
      operationId: createAsset
      tags:
      - Asset Management
      requestBody: 
        description: This action creates a new Asset within OpenProductionDataIO, which can later be retrieved using its Identifier.
        required: true
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/Asset'
              example: 
                $ref: '#/components/examples/createAssetExample'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  created:
                    type: boolean
                  identifier:
                    $ref: '#/components/schemas/identifier'
              example:
                $ref: '#/components/examples/assetCreatedResponse'
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
  "/asset/{omc-id}":
    get:
      summary: Returns an Asset object, given that Asset's unique ID 
      security: 
        - bearerToken: []
        - openId:
            - read
        - oauth2User:
            - read
      operationId: getAssetById
      tags:
        - Asset Management
      parameters: 
        - $ref: '#/components/parameters/omc-id'
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/Asset"
                  meta:
                    $ref: "#/components/schemas/Meta"
                type: object
          description: ""
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
    parameters: 
      - $ref: "#/components/parameters/fields"
    delete:
      summary: Deletes an Asset reference from OpenProductionDataIO.
      security: 
        - bearerToken: []
        - openId:
            - write
        - oauth2User:
            - write
      operationId: deleteAssetById
      tags: 
      -  Asset Management
      parameters:
        - $ref: "#/components/parameters/omc-id"
      responses:
        204:
          description: No Content 
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"  
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
  "/asset/{omc-id}/related":
    get:
      summary: Returns the list of Assets associated with this Asset's unique ID 
      security: 
        - bearerToken: []
        - openId:
            - read
        - oauth2User:
            - read
      operationId: getRelatedAssetsById
      tags:
        - Asset Management
      parameters: 
        - $ref: '#/components/parameters/omc-id'
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/identifier"
                    type: array
                  meta:
                    $ref: "#/components/schemas/Meta"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
          description: ""
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"    
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
  
  /participant/create:
    post:
      summary: |
        Create new participants in OPDIO and receive an OMC identifier.
      security: 
        - bearerToken: []
        - openId:
            - write
        - oauth2User:
            - write
      operationId: createParticipant
      tags:
      - Participant Management
      requestBody: 
        description: This action creates a new Participant within OpenProductionDataIO, which can later be retrieved using its Identifier.
        required: true
        content:
          application/json:
              schema:
                  $ref: '#/components/schemas/Participant'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  created:
                    type: boolean
                  identifier:
                    $ref: '#/components/schemas/identifier'
              example:
                $ref: '#/components/examples/participantCreatedResponse'
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"  
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
  "/participant/{omc-id}":
    get:
      summary: |
        Returns a Participant object, given that Participant's unique ID 
      security: 
        - bearerToken: []
        - openId:
            - read
        - oauth2User:
            - read
      operationId: getParticipantById
      tags:
        - Participant Management
      parameters: 
        - $ref: '#/components/parameters/omc-id'
        - $ref: '#/components/parameters/fields'
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/Participant"
                  meta:
                    $ref: "#/components/schemas/Meta"
                type: object
          description: ""
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Forbidden"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
    parameters: 
      - $ref: "#/components/parameters/fields"    
    delete:
      summary: Deletes an Participant reference from OpenProductionDataIO.
      security: 
        - bearerToken: []
        - openId:
            - write
        - oauth2User:
            - write
      operationId: deleteParticipantById
      tags: 
      -  Participant Management
      parameters:
        - $ref: "#/components/parameters/omc-id"
      responses:
        "204":
          description: No Content 
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Forbidden"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
  "/participant/{omc-id}/related":
    get:
      summary: |
        Returns the list of Participants associated with this participant's unique ID 
      security: 
        - bearerToken: []
        - openId:
            - read
        - oauth2User:
            - read
      operationId: getRelatedParticipantsById
      tags:
        - Participant Management
      parameters: 
        - $ref: '#/components/parameters/omc-id'
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/identifier"
                    type: array
                  meta:
                    $ref: "#/components/schemas/Meta"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
          description: ""
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 

  /character/create:
      post:
        summary: Create new Characters in OPDIO and receive an OMC identifier.
        security: 
          - bearerToken: []
          - openId:
              - write
          - oauth2User:
              - write
        operationId: createCharacter
        tags:
        - Character Management
        requestBody: 
          description: This action creates a new Character within OpenProductionDataIO, which can later be retrieved using its Identifier.
          required: true
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/Character'
                example: 
                  $ref: '#/components/examples/createCharacterExample'
        responses:
          201:
            description: Created
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    created:
                      type: boolean
                    identifier:
                      $ref: '#/components/schemas/identifier'
                example:
                  $ref: '#/components/examples/characterCreatedResponse'
          400:
            $ref: "#/components/responses/BadRequest"
          401:
            $ref: "#/components/responses/Unauthorized"
          403:
            $ref: "#/components/responses/Forbidden"
          404:
            $ref: "#/components/responses/NotFound" 
  "/character/{omc-id}":
    get:
      summary: Returns an Character object, given that Character's unique ID 
      security: 
        - bearerToken: []
        - openId:
            - read
        - oauth2User:
            - read
      operationId: getCharacterById
      tags:
        - Character Management
      parameters: 
        - $ref: '#/components/parameters/omc-id'
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/Character"
                  meta:
                    $ref: "#/components/schemas/Meta"
                type: object
          description: ""
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
    parameters: 
      - $ref: "#/components/parameters/fields"
    delete:
      summary: Deletes an Character reference from OpenProductionDataIO.
      security: 
        - bearerToken: []
        - openId:
            - write
        - oauth2User:
            - write
      operationId: deleteCharacterById
      tags: 
      -  Character Management
      parameters:
        - $ref: "#/components/parameters/omc-id"
      responses:
        204:
          description: No Content 
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"  
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
  "/character/{omc-id}/related":
    get:
      summary: Returns the list of Characters associated with this Character's unique ID 
      security: 
        - bearerToken: []
        - openId:
            - read
        - oauth2User:
            - read
      operationId: getRelatedCharactersById
      tags:
        - Character Management
      parameters: 
        - $ref: '#/components/parameters/omc-id'
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/identifier"
                    type: array
                  meta:
                    $ref: "#/components/schemas/Meta"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
          description: ""
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"    
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
 
  /creativework/create:
    post:
      summary: Create new CreativeWorks in OPDIO and receive an OMC identifier.
      security: 
        - bearerToken: []
        - openId:
            - write
        - oauth2User:
            - write
      operationId: createCreativeWork
      tags:
      - CreativeWork Management
      requestBody: 
        description: This action creates a new CreativeWork within OpenProductionDataIO, which can later be retrieved using its Identifier.
        required: true
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/CreativeWork'
              example: 
                $ref: '#/components/examples/createCreativeWorkExample'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  created:
                    type: boolean
                  identifier:
                    $ref: '#/components/schemas/identifier'
              example:
                $ref: '#/components/examples/creativeworkCreatedResponse'
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
  "/creativework/{omc-id}":
    get:
      summary: Returns an CreativeWork object, given that CreativeWork's unique ID 
      security: 
        - bearerToken: []
        - openId:
            - read
        - oauth2User:
            - read
      operationId: getCreativeWorkById
      tags:
        - CreativeWork Management
      parameters: 
        - $ref: '#/components/parameters/omc-id'
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/CreativeWork"
                  meta:
                    $ref: "#/components/schemas/Meta"
                type: object
          description: ""
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
    parameters: 
      - $ref: "#/components/parameters/fields"
    delete:
      summary: Deletes an CreativeWork reference from OpenProductionDataIO.
      security: 
        - bearerToken: []
        - openId:
            - write
        - oauth2User:
            - write
      operationId: deleteCreativeWorkById
      tags: 
      -  CreativeWork Management
      parameters:
        - $ref: "#/components/parameters/omc-id"
      responses:
        204:
          description: No Content 
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"  
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
  "/creativework/{omc-id}/related":
    get:
      summary: Returns the list of CreativeWorks associated with this CreativeWork's unique ID 
      security: 
        - bearerToken: []
        - openId:
            - read
        - oauth2User:
            - read
      operationId: getRelatedCreativeWorksById
      tags:
        - CreativeWork Management
      parameters: 
        - $ref: '#/components/parameters/omc-id'
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/identifier"
                    type: array
                  meta:
                    $ref: "#/components/schemas/Meta"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
          description: ""
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"    
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 

  /depiction/create:
    post:
      summary: Create new Depictions in OPDIO and receive an OMC identifier.
      security: 
        - bearerToken: []
        - openId:
            - write
        - oauth2User:
            - write
      operationId: createDepiction
      tags:
      - Depiction Management
      requestBody: 
        description: This action creates a new Depiction within OpenProductionDataIO, which can later be retrieved using its Identifier.
        required: true
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/Depiction'
              example: 
                $ref: '#/components/examples/createDepictionExample'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  created:
                    type: boolean
                  identifier:
                    $ref: '#/components/schemas/identifier'
              example:
                $ref: '#/components/examples/depictionCreatedResponse'
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
  "/depiction/{omc-id}":
    get:
      summary: Returns an Depiction object, given that Depiction's unique ID 
      security: 
        - bearerToken: []
        - openId:
            - read
        - oauth2User:
            - read
      operationId: getDepictionById
      tags:
        - Depiction Management
      parameters: 
        - $ref: '#/components/parameters/omc-id'
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/Depiction"
                  meta:
                    $ref: "#/components/schemas/Meta"
                type: object
          description: ""
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
    parameters: 
      - $ref: "#/components/parameters/fields"
    delete:
      summary: Deletes an Depiction reference from OpenProductionDataIO.
      security: 
        - bearerToken: []
        - openId:
            - write
        - oauth2User:
            - write
      operationId: deleteDepictionById
      tags: 
      -  Depiction Management
      parameters:
        - $ref: "#/components/parameters/omc-id"
      responses:
        204:
          description: No Content 
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"  
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
  "/depiction/{omc-id}/related":
    get:
      summary: Returns the list of Depictions associated with this Depiction's unique ID 
      security: 
        - bearerToken: []
        - openId:
            - read
        - oauth2User:
            - read
      operationId: getRelatedDepictionsById
      tags:
        - Depiction Management
      parameters: 
        - $ref: '#/components/parameters/omc-id'
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/identifier"
                    type: array
                  meta:
                    $ref: "#/components/schemas/Meta"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
          description: ""
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"    
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 

  /narrativeaudio/create:
    post:
      summary: Create new NarrativeAudios in OPDIO and receive an OMC identifier.
      security: 
        - bearerToken: []
        - openId:
            - write
        - oauth2User:
            - write
      operationId: createNarrativeAudio
      tags:
      - NarrativeAudio Management
      requestBody: 
        description: This action creates a new NarrativeAudio within OpenProductionDataIO, which can later be retrieved using its Identifier.
        required: true
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/NarrativeAudio'
              example: 
                $ref: '#/components/examples/createNarrativeAudioExample'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  created:
                    type: boolean
                  identifier:
                    $ref: '#/components/schemas/identifier'
              example:
                $ref: '#/components/examples/narrativeaudioCreatedResponse'
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
  "/narrativeaudio/{omc-id}":
    get:
      summary: Returns an NarrativeAudio object, given that NarrativeAudio's unique ID 
      security: 
        - bearerToken: []
        - openId:
            - read
        - oauth2User:
            - read
      operationId: getNarrativeAudioById
      tags:
        - NarrativeAudio Management
      parameters: 
        - $ref: '#/components/parameters/omc-id'
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/NarrativeAudio"
                  meta:
                    $ref: "#/components/schemas/Meta"
                type: object
          description: ""
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
    parameters: 
      - $ref: "#/components/parameters/fields"
    delete:
      summary: Deletes an NarrativeAudio reference from OpenProductionDataIO.
      security: 
        - bearerToken: []
        - openId:
            - write
        - oauth2User:
            - write
      operationId: deleteNarrativeAudioById
      tags: 
      -  NarrativeAudio Management
      parameters:
        - $ref: "#/components/parameters/omc-id"
      responses:
        204:
          description: No Content 
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"  
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
  "/narrativeaudio/{omc-id}/related":
    get:
      summary: Returns the list of NarrativeAudios associated with this NarrativeAudio's unique ID 
      security: 
        - bearerToken: []
        - openId:
            - read
        - oauth2User:
            - read
      operationId: getRelatedNarrativeAudiosById
      tags:
        - NarrativeAudio Management
      parameters: 
        - $ref: '#/components/parameters/omc-id'
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/identifier"
                    type: array
                  meta:
                    $ref: "#/components/schemas/Meta"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
          description: ""
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"    
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
            
  /narrativelocation/create:
    post:
      summary: Create new NarrativeLocations in OPDIO and receive an OMC identifier.
      security: 
        - bearerToken: []
        - openId:
            - write
        - oauth2User:
            - write
      operationId: createNarrativeLocation
      tags:
      - NarrativeLocation Management
      requestBody: 
        description: This action creates a new NarrativeLocation within OpenProductionDataIO, which can later be retrieved using its Identifier.
        required: true
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/NarrativeLocation'
              example: 
                $ref: '#/components/examples/createNarrativeLocationExample'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  created:
                    type: boolean
                  identifier:
                    $ref: '#/components/schemas/identifier'
              example:
                $ref: '#/components/examples/narrativelocationCreatedResponse'
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
  "/narrativelocation/{omc-id}":
    get:
      summary: Returns an NarrativeLocation object, given that NarrativeLocation's unique ID 
      security: 
        - bearerToken: []
        - openId:
            - read
        - oauth2User:
            - read
      operationId: getNarrativeLocationById
      tags:
        - NarrativeLocation Management
      parameters: 
        - $ref: '#/components/parameters/omc-id'
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/NarrativeLocation"
                  meta:
                    $ref: "#/components/schemas/Meta"
                type: object
          description: ""
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
    parameters: 
      - $ref: "#/components/parameters/fields"
    delete:
      summary: Deletes an NarrativeLocation reference from OpenProductionDataIO.
      security: 
        - bearerToken: []
        - openId:
            - write
        - oauth2User:
            - write
      operationId: deleteNarrativeLocationById
      tags: 
      -  NarrativeLocation Management
      parameters:
        - $ref: "#/components/parameters/omc-id"
      responses:
        204:
          description: No Content 
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"  
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
  "/narrativelocation/{omc-id}/related":
    get:
      summary: Returns the list of NarrativeLocations associated with this NarrativeLocation's unique ID 
      security: 
        - bearerToken: []
        - openId:
            - read
        - oauth2User:
            - read
      operationId: getRelatedNarrativeLocationsById
      tags:
        - NarrativeLocation Management
      parameters: 
        - $ref: '#/components/parameters/omc-id'
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/identifier"
                    type: array
                  meta:
                    $ref: "#/components/schemas/Meta"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
          description: ""
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"    
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
            
  /narrativeobject/create:
    post:
      summary: Create new NarrativeObjects in OPDIO and receive an OMC identifier.
      security: 
        - bearerToken: []
        - openId:
            - write
        - oauth2User:
            - write
      operationId: createNarrativeObject
      tags:
      - NarrativeObject Management
      requestBody: 
        description: This action creates a new NarrativeObject within OpenProductionDataIO, which can later be retrieved using its Identifier.
        required: true
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/NarrativeObject'
              example: 
                $ref: '#/components/examples/createNarrativeObjectExample'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  created:
                    type: boolean
                  identifier:
                    $ref: '#/components/schemas/identifier'
              example:
                $ref: '#/components/examples/narrativeobjectCreatedResponse'
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
  "/narrativeobject/{omc-id}":
    get:
      summary: Returns an NarrativeObject object, given that NarrativeObject's unique ID 
      security: 
        - bearerToken: []
        - openId:
            - read
        - oauth2User:
            - read
      operationId: getNarrativeObjectById
      tags:
        - NarrativeObject Management
      parameters: 
        - $ref: '#/components/parameters/omc-id'
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/NarrativeObject"
                  meta:
                    $ref: "#/components/schemas/Meta"
                type: object
          description: ""
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
    parameters: 
      - $ref: "#/components/parameters/fields"
    delete:
      summary: Deletes an NarrativeObject reference from OpenProductionDataIO.
      security: 
        - bearerToken: []
        - openId:
            - write
        - oauth2User:
            - write
      operationId: deleteNarrativeObjectById
      tags: 
      -  NarrativeObject Management
      parameters:
        - $ref: "#/components/parameters/omc-id"
      responses:
        204:
          description: No Content 
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"  
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
  "/narrativeobject/{omc-id}/related":
    get:
      summary: Returns the list of NarrativeObjects associated with this NarrativeObject's unique ID 
      security: 
        - bearerToken: []
        - openId:
            - read
        - oauth2User:
            - read
      operationId: getRelatedNarrativeObjectsById
      tags:
        - NarrativeObject Management
      parameters: 
        - $ref: '#/components/parameters/omc-id'
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/identifier"
                    type: array
                  meta:
                    $ref: "#/components/schemas/Meta"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
          description: ""
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"    
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 

  /narrativestyling/create:
    post:
      summary: Create new NarrativeStylings in OPDIO and receive an OMC identifier.
      security: 
        - bearerToken: []
        - openId:
            - write
        - oauth2User:
            - write
      operationId: createNarrativeStyling
      tags:
      - NarrativeStyling Management
      requestBody: 
        description: This action creates a new NarrativeStyling within OpenProductionDataIO, which can later be retrieved using its Identifier.
        required: true
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/NarrativeStyling'
              example: 
                $ref: '#/components/examples/createNarrativeStylingExample'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  created:
                    type: boolean
                  identifier:
                    $ref: '#/components/schemas/identifier'
              example:
                $ref: '#/components/examples/narrativestylingCreatedResponse'
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
  "/narrativestyling/{omc-id}":
    get:
      summary: Returns an NarrativeStyling object, given that NarrativeStyling's unique ID 
      security: 
        - bearerToken: []
        - openId:
            - read
        - oauth2User:
            - read
      operationId: getNarrativeStylingById
      tags:
        - NarrativeStyling Management
      parameters: 
        - $ref: '#/components/parameters/omc-id'
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/NarrativeStyling"
                  meta:
                    $ref: "#/components/schemas/Meta"
                type: object
          description: ""
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
    parameters: 
      - $ref: "#/components/parameters/fields"
    delete:
      summary: Deletes an NarrativeStyling reference from OpenProductionDataIO.
      security: 
        - bearerToken: []
        - openId:
            - write
        - oauth2User:
            - write
      operationId: deleteNarrativeStylingById
      tags: 
      -  NarrativeStyling Management
      parameters:
        - $ref: "#/components/parameters/omc-id"
      responses:
        204:
          description: No Content 
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"  
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
  "/narrativestyling/{omc-id}/related":
    get:
      summary: Returns the list of NarrativeStylings associated with this NarrativeStyling's unique ID 
      security: 
        - bearerToken: []
        - openId:
            - read
        - oauth2User:
            - read
      operationId: getRelatedNarrativeStylingsById
      tags:
        - NarrativeStyling Management
      parameters: 
        - $ref: '#/components/parameters/omc-id'
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/identifier"
                    type: array
                  meta:
                    $ref: "#/components/schemas/Meta"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
          description: ""
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"    
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
         
  /narrativewardrobe/create:
    post:
      summary: Create new NarrativeWardrobes in OPDIO and receive an OMC identifier.
      security: 
        - bearerToken: []
        - openId:
            - write
        - oauth2User:
            - write
      operationId: createNarrativeWardrobe
      tags:
      - NarrativeWardrobe Management
      requestBody: 
        description: This action creates a new NarrativeWardrobe within OpenProductionDataIO, which can later be retrieved using its Identifier.
        required: true
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/NarrativeWardrobe'
              example: 
                $ref: '#/components/examples/createNarrativeWardrobeExample'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  created:
                    type: boolean
                  identifier:
                    $ref: '#/components/schemas/identifier'
              example:
                $ref: '#/components/examples/narrativewardrobeCreatedResponse'
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
  "/narrativewardrobe/{omc-id}":
    get:
      summary: Returns an NarrativeWardrobe object, given that NarrativeWardrobe's unique ID 
      security: 
        - bearerToken: []
        - openId:
            - read
        - oauth2User:
            - read
      operationId: getNarrativeWardrobeById
      tags:
        - NarrativeWardrobe Management
      parameters: 
        - $ref: '#/components/parameters/omc-id'
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/NarrativeWardrobe"
                  meta:
                    $ref: "#/components/schemas/Meta"
                type: object
          description: ""
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
    parameters: 
      - $ref: "#/components/parameters/fields"
    delete:
      summary: Deletes an NarrativeWardrobe reference from OpenProductionDataIO.
      security: 
        - bearerToken: []
        - openId:
            - write
        - oauth2User:
            - write
      operationId: deleteNarrativeWardrobeById
      tags: 
      -  NarrativeWardrobe Management
      parameters:
        - $ref: "#/components/parameters/omc-id"
      responses:
        204:
          description: No Content 
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"  
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
  "/narrativewardrobe/{omc-id}/related":
    get:
      summary: Returns the list of NarrativeWardrobes associated with this NarrativeWardrobe's unique ID 
      security: 
        - bearerToken: []
        - openId:
            - read
        - oauth2User:
            - read
      operationId: getRelatedNarrativeWardrobesById
      tags:
        - NarrativeWardrobe Management
      parameters: 
        - $ref: '#/components/parameters/omc-id'
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/identifier"
                    type: array
                  meta:
                    $ref: "#/components/schemas/Meta"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
          description: ""
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"    
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
  
          
components:
  examples:
    createAssetExample:
      description: This is an example of creating an Asset.
      value:
        version:
            versionNumber: 1.2.3
            name: Updated Action Sequence
            description: This is where Og the bear attacks our hero.
        annotation:
          title: Make this funnier!
          text: Why can't the bear be wearing hilarious bloomers?
        RevisionOf:
          identifier: [some-old-mam, abcd1234]
    assetCreatedResponse:
      summary: Valid response for Asset creation.
      value:
        created: true
        identifier: ["some-mam", "abcd1234"]
    participantCreatedResponse:
      summary: Valid response for Participant creation.
      value:
        created: true
        identifier: ["prod-pro", "abcd1234"]
  parameters: 
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    omc-id:
      description: A URL-encoded string representing the union of identifierScope and identifierValue.
      in: path
      name: omc-id
      required: true
      schema:
        type: string
    omc-ids:
      description: Filters results by specified OMC IDs, separated by commas (URL Encoded please).
      in: query
      name: omc-ids
      required: true
      schema:
        type: string
  responses: 
    BadRequest:
      description: Your request was formatted incorrectly or missing required parameters.
    Forbidden:
      description: You weren't authorized to make your request; check your permissions and try again.
    NotFound:
      description: The particular item you are requesting was not found. This occurs, for example, if you request an Asset by an ID that does not exist. 
    Unauthorized:
      description: You do not have access to that resource.
  schemas: 
    Asset:
      $ref: 'schemas/omc-asset.json#/$defs/Asset/properties/Asset'
    Character:
      $ref: 'schemas/omc-context.json#/$defs/MediaCreationContext/properties/Character'
    CreativeWork:
      $ref: 'schemas/omc-context.json#/$defs/MediaCreationContext/properties/CreativeWork'
    Depiction:
      $ref: 'schemas/omc-context.json#/$defs/MediaCreationContext/properties/Depiction'
    Effect:
      $ref: 'schemas/omc-context.json#/$defs/MediaCreationContext/properties/Effect'
    NarrativeAudio:
      $ref: 'schemas/omc-context.json#/$defs/MediaCreationContext/properties/NarrativeAudio'
    NarrativeLocation:
      $ref: 'schemas/omc-context.json#/$defs/MediaCreationContext/properties/NarrativeLocation'
    NarrativeObject:
      $ref: 'schemas/omc-context.json#/$defs/MediaCreationContext/properties/NarrativeObject'
    NarrativeScene:
      $ref: 'schemas/omc-context.json#/$defs/MediaCreationContext/properties/NarrativeScene'
    NarrativeStyling:
      $ref: 'schemas/omc-context.json#/$defs/MediaCreationContext/properties/NarrativeStyling'
    NarrativeWardrobe:
      $ref: 'schemas/omc-context.json#/$defs/MediaCreationContext/properties/NarrativeWardrobe'
    ProductionLocation:  
      $ref: 'schemas/omc-context.json#/$defs/MediaCreationContext/properties/ProductionLocation'
    ProductionScene:
      $ref: 'schemas/omc-context.json#/$defs/MediaCreationContext/properties/ProductionScene'
    Sequence:
      $ref: 'schemas/omc-context.json#/$defs/MediaCreationContext/properties/Sequence'
    Slate:
      $ref: 'schemas/omc-context.json#/$defs/MediaCreationContext/properties/Slate'
    SpecialAction:
      $ref: 'schemas/omc-context.json#/$defs/MediaCreationContext/properties/SpecialAction'
    Participant:
      $ref: 'schemas/omc-participant.json#/$defs/Participant'
    identifier: 
      $ref: 'schemas/omc-utility.json#/$defs/Utility/properties/identifier'
    Meta:
      description: |
        The Meta Object contains basic information regarding the request, whether it was successful, and the response given by the API.  Check `responses` to see a description of types of response codes the API might give you under different cirumstances.
      properties:
        msg:
          description: HTTP Response Message
          example: OK
          type: string
        response_id:
          description: A unique ID paired with this response from the API.
          example: 57eea03c72381f86e05c35d2
          type: string
        status:
          description: HTTP Response Code
          example: 200
          format: int32
          type: integer
      type: object
    Pagination:
      description: |
        The Pagination Object contains information relating to the number of total results available as well as the number of results fetched and their relative positions.
      properties:
        count:
          description: Total number of items returned.
          example: 25
          format: int32
          type: integer
        offset:
          description: Position in pagination.
          example: 75
          format: int32
          type: integer
        total_count:
          description: Total number of items available.
          example: 250
          format: int32
          type: integer
      type: object
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  securitySchemes: 
    bearerToken:
      description: Default authentication mechanism
      scheme: bearer
      bearerFormat: JWT
      type: http
    openId:
      type: openIdConnect
      openIdConnectUrl: /.well-known/openid-configuration
    oauth2User:
      type: oauth2
      flows: 
        implicit: 
          authorizationUrl: https://your-idp-here.com
          scopes: 
            read: read data owned by user
            write: write new data