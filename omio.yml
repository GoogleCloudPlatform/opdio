openapi: '3.1.0'
jsonSchemaDialect: 'https://json-schema.org/draft/2019-09/schema'
info:
  title: OpenMetadataIO
  description: "OpenMetadataIO is a REST-based API enabling permissioned access to\
    \ versioned metadata in a heterogeneous media supply chain. \nThe purpose of OMIO\
    \ is to create a common source of truth for metadata across production, pre-production\
    \ and post-production workflows; \ntoday those workflows consist of disconnected\
    \ ISV solutions reading and writing metadata to their own proprietary datastores,\
    \ often\nrequiring elaborate export/import and validation procedures to ensure\
    \ integrity of metadata from one step to the next.\n\nOpenMetadataIO seeks to\
    \ solve this problem by offering a unified API for accessing metadata across all\
    \ of these applications.\n\nBelow is the draft specification for the OpenMetadataIO\
    \ API."
  version: 1.0.0
servers: 
  - url: |
security: []
tags:
- name: Asset Management
  description: CRUDL operations for Assets, as defined by the OMC schema. Can be extended with custom properties.
- name: Participant Management
  description: CRUDL operations for Participants, as defined by the OMC schema. Can be extended with custom properties.
- name: Role Management
  description: CRUDL operations for Roles, which can be assigned to Participants and used to grant or deny access to metadata within OMIO.
- name: Schema Extensions
  description: Extend the core [OMC schema](https://json-schema.org/specification) by specifying additional required fields for Assets, Participants and Roles.


paths:
  /asset/create:
    post:
      description: |
        Create new Assets in OMIO and receive an OMC identifier.
      operationId: createAsset
      tags:
      - Asset Management
      requestBody: 
        description: This action creates a new Asset within OpenMetadataIO, which can later be retrieved using its Identifier.
        required: true
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/Asset'
              example: 
                $ref: '#/components/examples/createAssetExample'

      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  created:
                    type: boolean
                  identifier:
                    $ref: '#/components/schemas/identifier'
              example:
                $ref: '#/components/examples/assetCreatedResponse'
        400:
          $ref: "#/components/responses/BadRequest"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
  "/asset/{omc-id}":
    get:
      description: |
        Returns an Asset object, given that Asset's unique ID 
      operationId: getAssetById
      tags:
        - Asset Management
      parameters: 
        - $ref: '#/components/parameters/omc-id'
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/Asset"
                  meta:
                    $ref: "#/components/schemas/Meta"
                type: object
          description: ""
        400:
          $ref: "#/components/responses/BadRequest"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
    delete:
      description: Deletes an Asset reference from OpenMetadataIO.
      operationId: deleteAssetById
      tags: 
      -  Asset Management
      parameters:
        - $ref: "#/components/parameters/omc-id"
      responses:
        204:
          description: No Content 
        400:
          $ref: "#/components/responses/BadRequest"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
    patch:
      description: Updates the details of an already-created Asset with the provided OMC ID.
      operationId: updateAssetById
      tags:
        - Asset Management
      parameters:
        - $ref: "#/components/parameters/omc-id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Asset"
        required: true
      responses: 
        200:
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/Asset"
                  meta:
                    $ref: "#/components/schemas/Meta"
                type: object
          description: ""          
        400:
          $ref: "#/components/responses/BadRequest"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
  "/asset/{omc-id}/related":
    get:
      description: |
        Returns the list of Assets associated with this Asset's unique ID 
      operationId: getRelatedAssetsById
      tags:
        - Asset Management
      parameters: 
        - $ref: '#/components/parameters/omc-id'
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/identifier"
                    type: array
                  meta:
                    $ref: "#/components/schemas/Meta"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
          description: ""
        400:
          $ref: "#/components/responses/BadRequest"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 

  /participant/create:
    post:
      description: |
        Create new participants in OMIO and receive an OMC identifier.
      operationId: createParticipant
      tags:
      - Participant Management
      requestBody: 
        description: This action creates a new Participant within OpenMetadataIO, which can later be retrieved using its Identifier.
        required: true
        content:
          application/json:
              schema:
                  $ref: '#/components/schemas/Participant'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  created:
                    type: boolean
                  identifier:
                    $ref: '#/components/schemas/identifier'
              example:
                $ref: '#/components/examples/participantCreatedResponse'
        400:
          $ref: "#/components/responses/BadRequest"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
  "/participant/{omc-id}":
    get:
      description: |
        Returns a Participant object, given that Participant's unique ID 
      operationId: getParticipantById
      tags:
        - Participant Management
      parameters: 
        - $ref: '#/components/parameters/omc-id'
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/Participant"
                  meta:
                    $ref: "#/components/schemas/Meta"
                type: object
          description: ""
        400:
          $ref: "#/components/responses/BadRequest"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
    delete:
      description: Deletes an Participant reference from OpenMetadataIO.
      operationId: deleteParticipantById
      tags: 
      -  Participant Management
      parameters:
        - $ref: "#/components/parameters/omc-id"
      responses:
        "204":
          description: No Content 
        400:
          $ref: "#/components/responses/BadRequest"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
    patch:
      description: Updates the details of an already-created participant with the provided OMC ID.
      operationId: updateParticipantById
      tags:
        - Participant Management
      parameters:
        - $ref: "#/components/parameters/omc-id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Participant"
        required: true
      responses: 
        200:
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/Participant"
                  meta:
                    $ref: "#/components/schemas/Meta"
                type: object
          description: ""
        400:
          $ref: "#/components/responses/BadRequest"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
  "/participant/{omc-id}/related":
    get:
      description: |
        Returns the list of Participants associated with this participant's unique ID 
      operationId: getRelatedParticipantsById
      tags:
        - Participant Management
      parameters: 
        - $ref: '#/components/parameters/omc-id'
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/identifier"
                    type: array
                  meta:
                    $ref: "#/components/schemas/Meta"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
          description: ""
        400:
          $ref: "#/components/responses/BadRequest"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound" 
            

components:
  examples:
    createAssetExample:
      properties:
        version:
            versionNumber: 1.2.3
            name: Updated Action Sequence
            description: This is where Og the bear attacks our hero.
        annotation:
          title: Make this funnier!
          text: Why can't the bear be wearing hilarious bloomers?
        RevisionOf:
          identifier: [some-old-mam, abcd1234]
    assetCreatedResponse:
        created: true
        identifier: ["some-mam", "abcd1234"]
    participantCreatedResponse:
          created: true
          identifier: ["prod-pro", "abcd1234"]
  parameters: 
    omc-id:
      description: A URL-encoded string representing the union of identifierScope and identifierValue.
      in: path
      name: omc-id
      required: true
      schema:
        type: string
    omc-ids:
      description: Filters results by specified OMC IDs, separated by commas (URL Encoded please).
      in: query
      name: omc-ids
      required: true
      schema:
        type: string
  responses: 
    BadRequest:
      description: Your request was formatted incorrectly or missing required parameters.
    Forbidden:
      description: You weren't authorized to make your request; check your permissions and try again.
    NotFound:
      description: The particular item you are requesting was not found. This occurs, for example, if you request an Asset by an ID that does not exist. 
  schemas: 
    Asset:
      $ref: 'schemas/omc-asset.json#/$defs/Asset/properties/Asset'
    Participant:
      $ref: 'schemas/omc-participant.json#/$defs/Participant'
    identifier: 
      $ref: 'schemas/omc-utility.json#/$defs/Utility/properties/identifier'
    Meta:
      description: |
        The Meta Object contains basic information regarding the request, whether it was successful, and the response given by the API.  Check `responses` to see a description of types of response codes the API might give you under different cirumstances.
      properties:
        msg:
          description: HTTP Response Message
          example: OK
          type: string
        response_id:
          description: A unique ID paired with this response from the API.
          example: 57eea03c72381f86e05c35d2
          type: string
        status:
          description: HTTP Response Code
          example: 200
          format: int32
          type: integer
      type: object
    Pagination:
      description: |
        The Pagination Object contains information relating to the number of total results available as well as the number of results fetched and their relative positions.
      properties:
        count:
          description: Total number of items returned.
          example: 25
          format: int32
          type: integer
        offset:
          description: Position in pagination.
          example: 75
          format: int32
          type: integer
        total_count:
          description: Total number of items available.
          example: 250
          format: int32
          type: integer
      type: object
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string    
